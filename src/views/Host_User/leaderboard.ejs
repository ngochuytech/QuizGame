<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz Pro - Create Quiz</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/Host_User/leaderboard.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chakra+Petch&display=swap" rel="stylesheet">
</head>

<body>
    <!-- Header -->
    <%- include('../utils/header.ejs'); %>
    
    <!-- Main Content -->
    <div class="container mt-5">
        <h2 class="text-center">Bảng xếp hạng</h2>
        <h4 class="text-center">Bài thi: <span><%=currentExam.nameDisplay%></span></h4>
        <h6 class="text-center">Số câu: <span><%=currentExam.questions.length%></span></h6>
        <table class="table leaderboard-table">
            <thead>
                <tr>
                    <th>Tên</th>
                    <th style="text-align: center;">Số câu đã trả lời</th>
                    <th style="text-align: center;">Số câu đúng</th>
                    <th style="text-align: center;">Điểm số</th>
                </tr>
            </thead>
            <tbody id="leaderboard-body">
                <!-- Nội dung sẽ được thêm động từ JavaScript -->
            </tbody>
        </table>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const room = '<%= currentExam._id %>';
        let leaderboard = [];
        let previousRanks = {}; // Lưu thứ hạng trước đó của mỗi người chơi
        

        // Gửi yêu cầu để hiển thị bảng xếp hạng
        socket.emit('leaderboard:display', { room });
        
        // Xử lý sự kiện hiển thị bảng xếp hạng lần đầu
        socket.on('displayLeaderboard', (data) => {
            leaderboard = data || []; // Gán dữ liệu bảng xếp hạng ban đầu
            renderLeaderboard(); // Hiển thị bảng xếp hạng
        });
        
        // Hàm hiển thị bảng xếp hạng với hiệu ứng trượt
        function renderLeaderboard() {
            const leaderboardBody = document.getElementById('leaderboard-body');
            leaderboardBody.innerHTML = ''; // Xóa nội dung cũ
        
            leaderboard.forEach((player, index) => {
                
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <div class="d-flex align-items-center">
                            <img src="${player.avatar}" alt="Avatar" class="avatar rounded-circle me-2">
                            <span>${player.userName}</span>
                        </div>
                    </td>
                    <td style="text-align: center;">${player.numberComplete || 0}</td>
                    <td style="text-align: center;">${player.numberCorrect}</td>
                    <td style="text-align: center;">${player.score}</td>
                `;
    
                // Kiểm tra nếu người chơi có thay đổi thứ hạng
                if (previousRanks[player.userName] !== undefined && previousRanks[player.userName] !== index) {
                    $(row).css({ opacity: 0, position: "relative", top: previousRanks[player.userName] > index ? "20px" : "-20px" });
                    $(row).animate({ opacity: 1, top: "0px" }, 500); // Hiệu ứng trượt
                }
    
                leaderboardBody.appendChild(row);
    
                // Cập nhật thứ hạng hiện tại của người chơi
                previousRanks[player.userName] = index;
            });
        }
        
        // Xử lý sự kiện cập nhật bảng xếp hạng
        socket.on('updateLeaderboard', ({ userName, numberComplete, numberCorrect, score }) => {
            // Tìm người chơi trong bảng xếp hạng
            const playerIndex = leaderboard.findIndex(player => player.userName === userName);
        
            if (playerIndex !== -1) {
                // Cập nhật thông tin người chơi nếu đã tồn tại trong bảng xếp hạng
                leaderboard[playerIndex].numberComplete = numberComplete;
                leaderboard[playerIndex].numberCorrect = numberCorrect;
                leaderboard[playerIndex].score = score;
            } else {
                // Thêm người chơi mới nếu không tìm thấy
                leaderboard.push({ userName, numberComplete, numberCorrect, score });
            }
        
            // Sắp xếp bảng xếp hạng theo điểm số (cao nhất trước)
            leaderboard.sort((a, b) => b.score - a.score);
        
            // Hiển thị lại bảng xếp hạng đã sắp xếp với hiệu ứng trượt
            renderLeaderboard();
        });
    </script>
    
    
</body>

</html>